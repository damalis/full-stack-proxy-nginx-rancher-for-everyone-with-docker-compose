services:

    rancher:
        depends_on:
            certbot:
                condition: service_healthy
        image: 'rancher/rancher:${RANCHER_IMAGE_VERSION}'
        container_name: rancher
        networks:
            - backend
        volumes:
            - './rancher/rancher:/var/lib/rancher'
            - './rancher/rancher-data:/var/lib/rancher-data'
            - 'certbot-etc:${LETSENCRYPT_CONF_PREFIX}'
        hostname: rancher
        restart: unless-stopped
        ports:
            - '8080:80'
            - '8443:443'
        privileged: true
        cgroup: host
        environment:
            SSL_CERT_DIR: '${LETSENCRYPT_CONF_PREFIX}/live/${DOMAIN_NAME}'
            NO_PROXY: 'localhost,127.0.0.1,0.0.0.0,10.0.0.0/8,cattle-system.svc,.svc,.cluster.local,${DOMAIN_NAME}'
        entrypoint: bash -c "rancher --no-cacerts --acme-domain ${DOMAIN_NAME}"

    certbot:
        depends_on:
            - proxy
        image: certbot/certbot:latest
        container_name: certbot
        networks:
            - backend
        volumes:
            - 'certbot-etc:${LETSENCRYPT_CONF_PREFIX}'
            - 'certbot-var:/var/lib/letsencrypt'
            - '/tmp/acme-challenge:/tmp/acme-challenge'
        restart: unless-stopped
        healthcheck:
            test: ["CMD-SHELL", "test -d ${LETSENCRYPT_CONF_PREFIX}/live/${DOMAIN_NAME} || exit 1"]
            interval: 5s
            timeout: 5s
            retries: 20
        environment:
            TZ: '${LOCAL_TIMEZONE}'
        entrypoint: /bin/sh -c "${SSL_SNIPPET}; trap exit TERM; while :; do certbot renew --dry-run; sleep 12h & wait $${!}; done;"

    proxy:
        image: nginx:stable
        container_name: proxy
        networks:
            - backend
            - frontend
        volumes:
            - type: bind
              source: ./proxy/nginx.conf
              target: '${PROXY_PREFIX}/nginx.conf'
            - type: bind
              source: ./proxy/templates/proxy.conf.template
              target: '${PROXY_PREFIX}/templates/default.conf.template'
            - type: bind
              source: ./proxy/ssl-option/options-ssl-nginx.conf
              target: '${LETSENCRYPT_CONF_PREFIX}/options-ssl-nginx.conf'
            - type: bind
              source: ./ssl-proxyconf.sh
              target: '/tmp/ssl-proxyconf.sh'
            - 'certbot-etc:${LETSENCRYPT_CONF_PREFIX}'
            - '/tmp/acme-challenge:/tmp/acme-challenge'
        hostname: proxy
        restart: unless-stopped
        ports:
            - '80:80'
            - '443:443'
        environment:
            NGINX_HOST: ${DOMAIN_NAME}
            NGINX_PORT: 80
            TZ: '${LOCAL_TIMEZONE}'
        command: bash -c "/docker-entrypoint.sh nginx -v; sh /tmp/ssl-proxyconf.sh '${DOMAIN_NAME}' '${LETSENCRYPT_CONF_PREFIX}' '${PROXY_PREFIX}'"

networks:
    backend: null
    frontend: null

volumes:
    certbot-etc:
        external: true
    certbot-var:
        name: certbot-var
